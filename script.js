const audioList = document.getElementById("audio-list");
const audioPlayer = document.getElementById("audio-player");

// ðŸ”¹ URL do Azure Blob Storage
const blobStorageUrl = "https://eus2pdcbutton.blob.core.windows.net/audios";

// ðŸ”¹ ExtensÃµes permitidas
const allowedExtensions = [".mp3", ".ogg"];

// ðŸ”¹ FunÃ§Ã£o para buscar arquivos de Ã¡udio automaticamente
async function fetchAudioFiles() {
    try {
        const response = await fetch(blobStorageUrl + "?restype=container&comp=list");

        if (!response.ok) {
            throw new Error("Erro ao acessar o Blob Storage. Verifique permissÃµes.");
        }

        const text = await response.text();
        const parser = new DOMParser();
        const xml = parser.parseFromString(text, "application/xml");
        const blobs = xml.getElementsByTagName("Name");

        if (blobs.length === 0) {
            audioList.innerHTML = "<p>Nenhum Ã¡udio encontrado.</p>";
            return;
        }

        // ðŸ”¹ Criar botÃµes para cada arquivo de Ã¡udio
        audioList.innerHTML = "";
        Array.from(blobs).forEach(blob => {
            const fileName = blob.textContent;
            const fileUrl = `${blobStorageUrl}/${fileName}`;

            // ðŸ”¹ Verifica se o arquivo tem extensÃ£o permitida
            if (allowedExtensions.some(ext => fileName.toLowerCase().endsWith(ext))) {
                const button = document.createElement("button");
                button.textContent = fileName.replace(/\.(mp3|ogg)$/, ""); // Remove a extensÃ£o
                button.classList.add("audio-button"); // Adiciona classe CSS para estilizar
                button.onclick = () => playAudio(fileUrl);
                audioList.appendChild(button);
            }
        });

    } catch (error) {
        console.error("Erro ao buscar Ã¡udios:", error);
        audioList.innerHTML = `<p>Erro ao carregar Ã¡udios: ${error.message}</p>`;
    }
}

// ðŸ”¹ FunÃ§Ã£o para tocar o Ã¡udio selecionado
function playAudio(url) {
    audioPlayer.src = url;
    audioPlayer.play();
}

// ðŸ”¹ Carregar Ã¡udios ao iniciar a pÃ¡gina
fetchAudioFiles();
